{"ast":null,"code":"/*** GUI Part ***/\nvar tool = 0;\nvar tools = document.querySelectorAll(\".tool\");\nvar drawColor = [50, 50, 60];\nvar radius = 4;\n\nfor (var i = 0; i < tools.length; i++) {\n  tools[i].onclick = function (id) {\n    return function () {\n      setTool(id);\n    };\n  }(i);\n}\n\nfunction setTool(id) {\n  tool = id;\n\n  for (var i = 0; i < tools.length; i++) {\n    tools[i].classList.remove(\"tool-selected\");\n    if (id == i) tools[i].classList.add(\"tool-selected\");\n  }\n}\n\nclass Wall {\n  constructor(sX, sY, eX, eY) {\n    this.sX = sX;\n    this.sY = sY;\n    this.eX = eX;\n    this.eY = eY;\n  }\n\n  display() {}\n\n}\n/*** Drawing part ***/\n\n\nvar lastPoint = null;\nvar graphic = null;\nvar squareOrigin = null;\nvar lineOrigin = null;\nvar circleOrigin = null;\nvar grid = 50;\nvar radius = 10;\n\nfunction setup() {\n  createCanvas(document.body.clientWidth, document.body.clientHeight - 50).parent(\"#canvas\");\n  ellipseMode(CENTER);\n  graphic = createGraphics(document.body.clientWidth, document.body.clientHeight - 50);\n  graphic.background(255);\n}\n\nfunction draw() {\n  background(255);\n  image(graphic, 0, 0);\n  tool0Preview();\n\n  if (mouseIsPressed) {\n    drawOnGraphic();\n  } else {\n    lastPoint = null;\n    onMouseQuit();\n  }\n}\n\nfunction tool0Preview() {\n  noFill();\n  stroke(90);\n  strokeWeight(1);\n  let destX = Math.floor(mouseX / grid) * grid;\n  let destY = Math.floor(mouseY / grid) * grid;\n  ellipse(destX, destY, radius, radius);\n}\n\nfunction drawOnGraphic() {\n  if (lastPoint == null) lastPoint = [mouseX, mouseY];\n\n  if (tool == 1) {\n    if (squareOrigin == null) {\n      squareOrigin = [mouseX, mouseY];\n    } else {\n      fill([drawColor[0], drawColor[1], drawColor[2], 122]);\n      noStroke();\n      rect(squareOrigin[0], squareOrigin[1], mouseX - squareOrigin[0], mouseY - squareOrigin[1]);\n    }\n  }\n\n  if (tool == 0) {\n    if (lineOrigin == null) {\n      lineOrigin = [Math.floor(mouseX / grid) * grid, Math.floor(mouseY / grid) * grid];\n    } else {\n      strokeWeight(5);\n      stroke(drawColor);\n      let destX = Math.floor(mouseX / grid) * grid;\n      let destY = Math.floor(mouseY / grid) * grid;\n      line(lineOrigin[0], lineOrigin[1], destX, destY);\n    }\n  }\n\n  let destX = Math.floor(mouseX / grid) * grid;\n  let destY = Math.floor(mouseY / grid) * grid;\n  lastPoint = [destX, destY];\n}\n\nfunction onMouseQuit() {\n  if (squareOrigin != null) {\n    graphic.fill(drawColor);\n    graphic.noStroke();\n    graphic.rect(squareOrigin[0], squareOrigin[1], mouseX - squareOrigin[0], mouseY - squareOrigin[1]);\n    squareOrigin = null;\n  }\n\n  if (lineOrigin != null) {\n    graphic.strokeWeight(5);\n    graphic.stroke(drawColor);\n    graphic.line(lineOrigin[0], lineOrigin[1], Math.floor(mouseX / grid) * grid, Math.floor(mouseY / grid) * grid);\n    lineOrigin = null;\n  }\n}","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/p5/index.js"],"names":["tool","tools","document","querySelectorAll","drawColor","radius","i","length","onclick","id","setTool","classList","remove","add","Wall","constructor","sX","sY","eX","eY","display","lastPoint","graphic","squareOrigin","lineOrigin","circleOrigin","grid","setup","createCanvas","body","clientWidth","clientHeight","parent","ellipseMode","CENTER","createGraphics","background","draw","image","tool0Preview","mouseIsPressed","drawOnGraphic","onMouseQuit","noFill","stroke","strokeWeight","destX","Math","floor","mouseX","destY","mouseY","ellipse","fill","noStroke","rect","line"],"mappings":"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","sourcesContent":["\r\n\r\n/*** GUI Part ***/\r\nvar tool = 0 \r\nvar tools = document.querySelectorAll(\".tool\")\r\nvar drawColor =[50, 50, 60]\r\nvar radius = 4\r\n\r\nfor (var i = 0; i < tools.length; i++) {\r\n    tools[i].onclick = function (id) {\r\n        return function () {\r\n            setTool(id)\r\n        }\r\n    }(i)\r\n}\r\n\r\nfunction setTool(id)Â {\r\n    tool = id\r\n    for (var i = 0; i < tools.length; i++) {\r\n        tools[i].classList.remove(\"tool-selected\")\r\n        if (id == i)\r\n        tools[i].classList.add(\"tool-selected\")\r\n    }\r\n}\r\n\r\nclass Wall {\r\n    constructor(sX, sY, eX, eY) {\r\n        this.sX = sX\r\n        this.sY = sY\r\n        this.eX = eX\r\n        this.eY = eY\r\n    }\r\n\r\n    display() {\r\n\r\n    }\r\n}\r\n\r\n/*** Drawing part ***/\r\nvar lastPoint = null\r\nvar graphic = null\r\n\r\nvar squareOrigin = null\r\nvar lineOrigin = null\r\nvar circleOrigin = null\r\n\r\nvar grid = 50\r\nvar radius = 10\r\n\r\nfunction setup() {\r\n    createCanvas(document.body.clientWidth, document.body.clientHeight - 50).parent(\"#canvas\")\r\n    ellipseMode(CENTER)\r\n    graphic = createGraphics(document.body.clientWidth, document.body.clientHeight - 50)\r\n    graphic.background(255)\r\n}\r\n\r\nfunction draw() {\r\n    background(255)\r\n    image(graphic, 0, 0)\r\n    \r\n    tool0Preview()\r\n\r\n    if (mouseIsPressed) {\r\n        drawOnGraphic()\r\n    } else {\r\n        lastPoint = null\r\n        onMouseQuit()\r\n    }\r\n}\r\n\r\nfunction tool0Preview()\r\n{\r\n    noFill()\r\n    stroke(90)\r\n    strokeWeight(1)\r\n\r\n    let destX = (Math.floor(mouseX / grid)) * grid\r\n    let destY = (Math.floor(mouseY / grid)) * grid\r\n\r\n    ellipse(destX, destY, radius, radius)\r\n}\r\n\r\nfunction drawOnGraphic() {\r\n    if (lastPoint == null)\r\n        lastPoint = [mouseX, mouseY]\r\n    \r\n    if (tool == 1) {\r\n        if (squareOrigin == null) {\r\n        squareOrigin = [mouseX, mouseY]\r\n        } else {\r\n        fill([drawColor[0], drawColor[1], drawColor[2], 122])\r\n        noStroke()\r\n        rect(squareOrigin[0], squareOrigin[1], mouseX - squareOrigin[0], mouseY - squareOrigin[1])\r\n        }\r\n    }\r\n\r\n    if (tool == 0) {\r\n        if (lineOrigin == null) {\r\n        lineOrigin = [(Math.floor(mouseX / grid)) * grid, (Math.floor(mouseY / grid)) * grid]\r\n        } else {\r\n        strokeWeight(5)\r\n        stroke(drawColor)\r\n        let destX = (Math.floor(mouseX / grid)) * grid\r\n        let destY = (Math.floor(mouseY / grid)) * grid\r\n        line(lineOrigin[0], lineOrigin[1], destX, destY)\r\n        }\r\n    }\r\n\r\n    let destX = (Math.floor(mouseX / grid)) * grid\r\n    let destY = (Math.floor(mouseY / grid)) * grid\r\n    \r\n    lastPoint = [destX, destY]\r\n}\r\n\r\nfunction onMouseQuit() {\r\n    if (squareOrigin != null) {\r\n        graphic.fill(drawColor)\r\n        graphic.noStroke()\r\n        graphic.rect(squareOrigin[0], squareOrigin[1], mouseX - squareOrigin[0], mouseY - squareOrigin[1])\r\n        squareOrigin = null\r\n    }\r\n    if (lineOrigin != null) {\r\n        graphic.strokeWeight(5)\r\n        graphic.stroke(drawColor)\r\n        graphic.line(lineOrigin[0], lineOrigin[1], (Math.floor(mouseX / grid)) * grid, (Math.floor(mouseY / grid)) * grid)\r\n        lineOrigin = null\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}