{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\src\\\\pages\\\\estimate.jsx\";\nimport React, { Component } from 'react';\nimport AppNavbar from '../components/AppNavbar';\nimport AddQuoteItem from '../components/AddQuoteItem';\nimport { Container, ListGroup, ListGroupItem, Input, Button } from 'reactstrap';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport p5 from 'p5';\n\nconst P5 = ({\n  setup,\n  draw\n}) => {\n  const sketch = p5 => {\n    p5.setup = () => setup(p5);\n\n    p5.draw = () => draw(p5);\n  };\n\n  new p5(sketch);\n  return React.createElement(React.Fragment, null);\n};\n\nclass EstimatePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotedItems: [],\n      itemTotal: [],\n      grandTotal: 0.0\n    };\n\n    this.getQuoteItem = item => {\n      var joined = this.state.quotedItems.concat(item); // console.log(\"add new item :\" + joined)\n      // console.log(\"add new item :\" + this.state.quotedItems)\n\n      this.setState({\n        quotedItems: joined\n      }); // console.log(this.state.quotedItems)\n    };\n\n    this.onChange = e => {\n      if (parseInt(e.target.value)) {\n        // console.log(\"change\" + e.target.value * e.target.name)\n        const t = parseInt(e.target.value) * parseInt(e.target.name);\n        const i = parseInt(e.target.id);\n        this.state.itemTotal[i] = t;\n        this.setState(this.state.itemTotal);\n        this.getGrandTotal(); // console.log(\"total item: at index\" + i +\" is \" + this.state.itemTotal[i])\n      } else {\n        e.target.value = '';\n        e.target.placeholder = \"Please enter valid a number\"; // console.log(\"not number\")\n      }\n    };\n\n    this.getGrandTotal = () => {\n      for (let i = 0; i < this.state.itemTotal.length; i++) {\n        this.state.grandTotal += this.state.itemTotal[i];\n      }\n\n      console.log(\"Grand total\" + this.state.grandTotal);\n      this.forceUpdate(); // this.setState(this.state.grandTotal)\n    };\n  }\n\n  setup(p5) {\n    var cnv = p5.createCanvas(280, 400);\n    var x = (p5.windowWidth - p5.width) / 2;\n    var y = (p5.windowHeight - p5.height) / 2;\n    cnv.position(10, y);\n    p5.background(255);\n    p5.ellipseMode(p5.CENTER);\n  }\n\n  draw(p5) {\n    p5.background(100);\n    p5.noFill();\n    let gX = Math.floor(p5.mouseX / 40) * 40;\n    let gY = Math.floor(p5.mouseY / 40) * 40;\n    p5.ellipse(gX, gY, 10, 10);\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(P5, {\n      setup: this.setup,\n      draw: this.draw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Estimate your house's cost\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Estimated total cost : $\", this.state.grandTotal), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(AddQuoteItem, {\n      toEstimate: this.getQuoteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.quotedItems.map((item, index) => React.createElement(ListGroupItem, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, item.name, \" - Price per unit $\", item.price, React.createElement(Input, {\n      type: \"text\",\n      pattern: \"[0-9]*\",\n      name: item.price,\n      id: index,\n      placeholder: item.measured_by,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Item cost $\", this.state.itemTotal[index]), React.createElement(Button, {\n      color: \"danger\",\n      className: \"btn btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\xD7\")))))));\n  }\n\n} // const EstimatePage = () => {\n//     const quotedItems = []\n//     const name = ''\n//     const getQuoteItem = (name) => {\n//         quotedItems.add(name)\n//     }\n//     return (\n//         <Provider store={store}>\n//         <div>\n//             <AppNavbar/>\n//             <Container>\n//                 <h1>Estimate you house cost</h1>\n//                 <br></br>\n//                 <h4>Estimated total cost : 0.00 $</h4>\n//                 <br></br>\n//                 <AddQuoteItem toEstimate = { this.getQuoteItem }/>\n//             </Container>\n//         </div>\n//         </Provider>\n//     )\n// }\n\n\nexport default EstimatePage;","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/pages/estimate.jsx"],"names":["React","Component","AppNavbar","AddQuoteItem","Container","ListGroup","ListGroupItem","Input","Button","Provider","store","p5","P5","setup","draw","sketch","EstimatePage","state","quotedItems","itemTotal","grandTotal","getQuoteItem","item","joined","concat","setState","onChange","e","parseInt","target","value","t","name","i","id","getGrandTotal","placeholder","length","console","log","forceUpdate","cnv","createCanvas","x","windowWidth","width","y","windowHeight","height","position","background","ellipseMode","CENTER","noFill","gX","Math","floor","mouseX","gY","mouseY","ellipse","render","map","index","price","measured_by"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AppNavbar from '../components/AppNavbar'\r\nimport AddQuoteItem from '../components/AddQuoteItem'\r\n\r\nimport { \r\n    Container, \r\n    ListGroup, \r\n    ListGroupItem,\r\n    Input,\r\n    Button\r\n} from 'reactstrap'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../App.css';\r\n\r\nimport p5 from 'p5';\r\n\r\nconst P5 = ({ setup, draw }) => {\r\n    const sketch = p5 => {\r\n    p5.setup = () => setup(p5);\r\n    p5.draw = () => draw(p5);\r\n    };\r\n    new p5(sketch);\r\n\r\n    return <></>;\r\n};\r\n\r\nclass EstimatePage extends Component {\r\n\r\n    state = {\r\n        quotedItems: [],\r\n        itemTotal: [],\r\n        grandTotal: 0.0\r\n    }\r\n\r\n    setup(p5) {\r\n        var cnv = p5.createCanvas(280,400)\r\n        var x = (p5.windowWidth - p5.width) / 2\r\n        var y = (p5.windowHeight - p5.height) / 2\r\n        cnv.position(10, y)\r\n        p5.background(255)\r\n        p5.ellipseMode(p5.CENTER)\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.background(100);\r\n        p5.noFill()\r\n        let gX = (Math.floor(p5.mouseX / 40)) * 40\r\n        let gY = (Math.floor(p5.mouseY / 40)) * 40\r\n        p5.ellipse(gX, gY, 10, 10)\r\n    }\r\n\r\n    getQuoteItem = (item) => {\r\n        var joined = this.state.quotedItems.concat(item)\r\n        // console.log(\"add new item :\" + joined)\r\n        // console.log(\"add new item :\" + this.state.quotedItems)\r\n        this.setState({ quotedItems: joined })\r\n        // console.log(this.state.quotedItems)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        if (parseInt(e.target.value)) {\r\n            // console.log(\"change\" + e.target.value * e.target.name)\r\n            const t = parseInt(e.target.value) * parseInt(e.target.name)\r\n            const i = parseInt(e.target.id)\r\n\r\n            this.state.itemTotal[i] = t\r\n            this.setState(this.state.itemTotal)\r\n\r\n            this.getGrandTotal()\r\n\r\n            // console.log(\"total item: at index\" + i +\" is \" + this.state.itemTotal[i])\r\n        } else {\r\n            e.target.value=''\r\n            e.target.placeholder = \"Please enter valid a number\"\r\n            // console.log(\"not number\")\r\n        }\r\n    }\r\n\r\n    getGrandTotal = () => {\r\n        for (let i=0; i < this.state.itemTotal.length; i++) {\r\n            this.state.grandTotal += this.state.itemTotal[i]\r\n        }\r\n        console.log(\"Grand total\" + this.state.grandTotal)\r\n        this.forceUpdate()\r\n        // this.setState(this.state.grandTotal)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n            <div>\r\n                <AppNavbar/>\r\n                <P5 setup={this.setup} draw={this.draw}/>\r\n                <Container>\r\n                    <h1>Estimate your house's cost</h1>\r\n                    <br></br>\r\n                    <h4>Estimated total cost : ${this.state.grandTotal}</h4>\r\n                    <br></br>\r\n                    <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n                    <ListGroup>\r\n                        {this.state.quotedItems.map(( item, index ) => (\r\n                            <ListGroupItem \r\n                            key={index}>\r\n                                {item.name} - Price per unit ${item.price}\r\n                            <Input \r\n                                type=\"text\"\r\n                                pattern=\"[0-9]*\"\r\n                                name={item.price}\r\n                                id={index}\r\n                                placeholder={item.measured_by}\r\n                                onChange={this.onChange}/>\r\n                            <p id={index}>Item cost ${this.state.itemTotal[index]}</p>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                className=\"btn btn-sm\"\r\n                            >&times;</Button>\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Container>\r\n            </div>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\n// const EstimatePage = () => {\r\n\r\n//     const quotedItems = []\r\n//     const name = ''\r\n\r\n//     const getQuoteItem = (name) => {\r\n//         quotedItems.add(name)\r\n//     }\r\n\r\n//     return (\r\n//         <Provider store={store}>\r\n//         <div>\r\n//             <AppNavbar/>\r\n//             <Container>\r\n//                 <h1>Estimate you house cost</h1>\r\n//                 <br></br>\r\n//                 <h4>Estimated total cost : 0.00 $</h4>\r\n//                 <br></br>\r\n//                 <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n//             </Container>\r\n//         </div>\r\n//         </Provider>\r\n//     )\r\n// }\r\n\r\nexport default EstimatePage"]},"metadata":{},"sourceType":"module"}