{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Label,Input,ListGroup,ListGroupItem}from'reactstrap';import{connect}from'react-redux';import{getItems}from'../actions/ItemActions';var AddQuoteItem=/*#__PURE__*/function(_Component){_inherits(AddQuoteItem,_Component);function AddQuoteItem(){var _getPrototypeOf2;var _this;_classCallCheck(this,AddQuoteItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AddQuoteItem)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={modal:false,items:[]};_this.toggle=function(){_this.setState({modal:!_this.state.modal});};_this.onListClick=function(item){console.log(\"click \"+item);_this.props.toEstimate(item);_this.toggle();};return _this;}_createClass(AddQuoteItem,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getItems();}},{key:\"render\",value:function render(){var _this2=this;var items=this.props.item.items;return React.createElement(\"div\",null,React.createElement(Button,{color:\"primary\",style:{marginBottom:'2rem'},onClick:this.toggle},\"Add quote item\"),React.createElement(Modal,{isOpen:this.state.modal,toggle:this.toggle},React.createElement(ModalHeader,{toggle:this.toggle},\"Pick a material\"),React.createElement(ModalBody,null,React.createElement(ListGroup,null,items.map(function(item){return React.createElement(ListGroupItem,{key:item._id,onClick:_this2.onListClick.bind(_this2,item)},item.name,\", \",item.price);})))));}}]);return AddQuoteItem;}(Component);var mapStateToProps=function mapStateToProps(state){return{item:state.item};};export default connect(mapStateToProps,{getItems:getItems})(AddQuoteItem);","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/components/AddQuoteItem.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","ListGroup","ListGroupItem","connect","getItems","AddQuoteItem","state","modal","items","toggle","setState","onListClick","item","console","log","props","toEstimate","marginBottom","map","_id","bind","name","price","mapStateToProps"],"mappings":"mzBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACIC,MADJ,CAEIC,KAFJ,CAGIC,WAHJ,CAIIC,SAJJ,CAKIC,IALJ,CAMIC,SANJ,CAOIC,KAPJ,CAQIC,KARJ,CASIC,SATJ,CAUIC,aAVJ,KAWO,YAXP,CAaA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,QAAT,KAAyB,wBAAzB,C,GAEMC,CAAAA,Y,uZAMFC,K,CAAQ,CACJC,KAAK,CAAE,KADH,CAEJC,KAAK,CAAE,EAFH,C,OAKRC,M,CAAS,UAAM,CACX,MAAKC,QAAL,CAAc,CACVH,KAAK,CAAE,CAAC,MAAKD,KAAL,CAAWC,KADT,CAAd,EAGH,C,OAEDI,W,CAAc,SAACC,IAAD,CAAU,CACpBC,OAAO,CAACC,GAAR,CAAY,SAAWF,IAAvB,EACA,MAAKG,KAAL,CAAWC,UAAX,CAAsBJ,IAAtB,EACA,MAAKH,MAAL,GACH,C,qGAnBmB,CAChB,KAAKM,KAAL,CAAWX,QAAX,GACH,C,uCAmBQ,oBACGI,CAAAA,KADH,CACa,KAAKO,KAAL,CAAWH,IADxB,CACGJ,KADH,CAGL,MACI,gCACI,oBAAC,MAAD,EACI,KAAK,CAAC,SADV,CAEI,KAAK,CAAE,CAACS,YAAY,CAAE,MAAf,CAFX,CAGI,OAAO,CAAE,KAAKR,MAHlB,mBADJ,CAMI,oBAAC,KAAD,EACI,MAAM,CAAE,KAAKH,KAAL,CAAWC,KADvB,CAEI,MAAM,CAAE,KAAKE,MAFjB,EAIQ,oBAAC,WAAD,EACI,MAAM,CAAE,KAAKA,MADjB,oBAJR,CAOQ,oBAAC,SAAD,MACA,oBAAC,SAAD,MACKD,KAAK,CAACU,GAAN,CAAU,SAAEN,IAAF,QACX,qBAAC,aAAD,EACA,GAAG,CAAEA,IAAI,CAACO,GADV,CAEA,OAAO,CAAG,MAAI,CAACR,WAAL,CAAiBS,IAAjB,CAAuB,MAAvB,CAA6BR,IAA7B,CAFV,EAGKA,IAAI,CAACS,IAHV,MAGkBT,IAAI,CAACU,KAHvB,CADW,EAAV,CADL,CADA,CAPR,CANJ,CADJ,CA4BH,C,0BAtDsB9B,S,EA8D3B,GAAM+B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACjB,KAAD,QAAY,CAChCM,IAAI,CAAEN,KAAK,CAACM,IADoB,CAAZ,EAAxB,CAIA,cAAeT,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CAAEnB,QAAQ,CAARA,QAAF,CAAlB,CAAP,CAAuCC,YAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    ListGroup,\r\n    ListGroupItem\r\n} from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getItems } from '../actions/ItemActions'\r\n\r\nclass AddQuoteItem extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    state = {\r\n        modal: false,\r\n        items: []\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onListClick = (item) => {\r\n        console.log(\"click \" + item)\r\n        this.props.toEstimate(item)\r\n        this.toggle()\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props.item\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"primary\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >Add quote item</Button>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Pick a material</ModalHeader>\r\n                        <ModalBody>\r\n                        <ListGroup>\r\n                            {items.map(( item ) => (\r\n                            <ListGroupItem \r\n                            key={item._id}\r\n                            onClick={ this.onListClick.bind (this, item) }>\r\n                                {item.name}, {item.price}\r\n                            </ListGroupItem>\r\n                        ))}\r\n                        </ListGroup>\r\n                        </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddQuoteItem.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(AddQuoteItem)"]},"metadata":{},"sourceType":"module"}