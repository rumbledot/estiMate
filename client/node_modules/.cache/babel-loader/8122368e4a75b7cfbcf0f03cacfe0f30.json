{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\src\\\\components\\\\ItemEditModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItems, editItem, updateItem } from '../actions/ItemActions';\nimport PropTypes from 'prop-types';\n\nclass ItemEditModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      measured_by: '',\n      price: '',\n      category: '',\n      editedItem: null,\n      itemID: this.props.id\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newItem = {\n        name: this.state.name,\n        measured_by: this.state.measured_by,\n        price: this.state.price,\n        category: this.state.category\n      };\n      this.props.updateItem(this.props.id, newItem);\n      this.toggle();\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const item = this.props.item.item;\n    console.log(item); // for(const i of item) {\n    //     if (i._id === this.state.itemID) {\n    //         editItem = i\n    //     }\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"edit\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Add a new material\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nItemEditModal.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ItemEditModal);","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/components/ItemEditModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","getItems","editItem","updateItem","PropTypes","ItemEditModal","state","modal","name","measured_by","price","category","editedItem","itemID","props","id","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newItem","componentDidMount","render","item","console","log","marginBottom","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { getItems, editItem, updateItem } from '../actions/ItemActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ItemEditModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        measured_by: '',\r\n        price: '',\r\n        category: '',\r\n        editedItem: null,\r\n        itemID: this.props.id\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState(\r\n            { [e.target.name]: e.target.value }\r\n            )\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newItem = {\r\n            name: this.state.name,\r\n            measured_by: this.state.measured_by,\r\n            price: this.state.price,\r\n            category: this.state.category\r\n        }\r\n\r\n        this.props.updateItem(this.props.id, newItem)\r\n        this.toggle()\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props.item\r\n        console.log(item)\r\n\r\n        // for(const i of item) {\r\n        //     if (i._id === this.state.itemID) {\r\n        //         editItem = i\r\n        //     }\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"dark\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >edit</Button>\r\n\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Add a new material</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.onSubmit}>\r\n                                <FormGroup>\r\n                                    \r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nItemEditModal.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps,{ getItems })(ItemEditModal)"]},"metadata":{},"sourceType":"module"}