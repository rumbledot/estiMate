{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\src\\\\pages\\\\estimate.jsx\";\nimport React, { Component } from 'react';\nimport AppNavbar from '../components/AppNavbar';\nimport AddQuoteItem from '../components/AddQuoteItem';\nimport { Container, ListGroup, ListGroupItem, Input } from 'reactstrap';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\n\nclass EstimatePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotedItems: [],\n      itemTotal: []\n    };\n\n    this.getQuoteItem = item => {\n      var joined = this.state.quotedItems.concat(item); // console.log(\"add new item :\" + joined)\n      // console.log(\"add new item :\" + this.state.quotedItems)\n\n      this.setState({\n        quotedItems: joined\n      }); // console.log(this.state.quotedItems)\n    };\n\n    this.onChange = e => {\n      if (parseInt(e.target.value)) {\n        // console.log(\"change\" + e.target.value * e.target.name)\n        const t = parseInt(e.target.value) * parseInt(e.target.name);\n        const i = parseInt(e.target.id);\n        this.state.itemTotal[i] = t;\n        this.setState(this.state.itemTotal); // console.log(\"total item: at index\" + i +\" is \" + this.state.itemTotal[i])\n      } else {\n        console.log(\"not number\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Estimate you house cost\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Estimated total cost : 0.00 $\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(AddQuoteItem, {\n      toEstimate: this.getQuoteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.quotedItems.map((item, index) => React.createElement(ListGroupItem, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, item.name, \" - Price per unit $\", item.price, React.createElement(Input, {\n      type: \"text\",\n      pattern: \"[0-9]*\",\n      name: item.price,\n      id: index,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Item cost $ \", this.state.itemTotal[index])))))));\n  }\n\n} // const EstimatePage = () => {\n//     const quotedItems = []\n//     const name = ''\n//     const getQuoteItem = (name) => {\n//         quotedItems.add(name)\n//     }\n//     return (\n//         <Provider store={store}>\n//         <div>\n//             <AppNavbar/>\n//             <Container>\n//                 <h1>Estimate you house cost</h1>\n//                 <br></br>\n//                 <h4>Estimated total cost : 0.00 $</h4>\n//                 <br></br>\n//                 <AddQuoteItem toEstimate = { this.getQuoteItem }/>\n//             </Container>\n//         </div>\n//         </Provider>\n//     )\n// }\n\n\nexport default EstimatePage;","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/pages/estimate.jsx"],"names":["React","Component","AppNavbar","AddQuoteItem","Container","ListGroup","ListGroupItem","Input","Provider","store","EstimatePage","state","quotedItems","itemTotal","getQuoteItem","item","joined","concat","setState","onChange","e","parseInt","target","value","t","name","i","id","console","log","render","map","index","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AppNavbar from '../components/AppNavbar'\r\nimport AddQuoteItem from '../components/AddQuoteItem'\r\n\r\nimport { \r\n    Container, \r\n    ListGroup, \r\n    ListGroupItem,\r\n    Input\r\n} from 'reactstrap'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../App.css';\r\n\r\nclass EstimatePage extends Component {\r\n\r\n    state = {\r\n        quotedItems: [],\r\n        itemTotal: []\r\n    }\r\n\r\n    getQuoteItem = (item) => {\r\n        var joined = this.state.quotedItems.concat(item)\r\n        // console.log(\"add new item :\" + joined)\r\n        // console.log(\"add new item :\" + this.state.quotedItems)\r\n        this.setState({ quotedItems: joined })\r\n        // console.log(this.state.quotedItems)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        if (parseInt(e.target.value)) {\r\n            // console.log(\"change\" + e.target.value * e.target.name)\r\n            const t = parseInt(e.target.value) * parseInt(e.target.name)\r\n            const i = parseInt(e.target.id)\r\n\r\n            this.state.itemTotal[i] = t\r\n            this.setState(this.state.itemTotal)\r\n\r\n            // console.log(\"total item: at index\" + i +\" is \" + this.state.itemTotal[i])\r\n        } else {\r\n            console.log(\"not number\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container>\r\n                    <h1>Estimate you house cost</h1>\r\n                    <br></br>\r\n                    <h4>Estimated total cost : 0.00 $</h4>\r\n                    <br></br>\r\n                    <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n                    <ListGroup>\r\n                        {this.state.quotedItems.map(( item, index ) => (\r\n                            <ListGroupItem \r\n                            key={index}>\r\n                                {item.name} - Price per unit ${item.price}\r\n                            <Input \r\n                                type=\"text\"\r\n                                pattern=\"[0-9]*\"\r\n                                name={item.price}\r\n                                id={index}\r\n                                onChange={this.onChange}/>\r\n                            <p id={index}>Item cost $ {this.state.itemTotal[index]}</p>\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Container>\r\n            </div>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\n// const EstimatePage = () => {\r\n\r\n//     const quotedItems = []\r\n//     const name = ''\r\n\r\n//     const getQuoteItem = (name) => {\r\n//         quotedItems.add(name)\r\n//     }\r\n\r\n//     return (\r\n//         <Provider store={store}>\r\n//         <div>\r\n//             <AppNavbar/>\r\n//             <Container>\r\n//                 <h1>Estimate you house cost</h1>\r\n//                 <br></br>\r\n//                 <h4>Estimated total cost : 0.00 $</h4>\r\n//                 <br></br>\r\n//                 <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n//             </Container>\r\n//         </div>\r\n//         </Provider>\r\n//     )\r\n// }\r\n\r\nexport default EstimatePage"]},"metadata":{},"sourceType":"module"}