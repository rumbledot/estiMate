{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Label,Input}from'reactstrap';import{connect}from'react-redux';import{updateItem}from'../actions/ItemActions';var ItemEditModal=/*#__PURE__*/function(_Component){_inherits(ItemEditModal,_Component);function ItemEditModal(){var _getPrototypeOf2;var _this;_classCallCheck(this,ItemEditModal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ItemEditModal)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={modal:false,name:'',measured_by:'',price:'',category:'',editedItem:_this.props.edittedItem};_this.toggle=function(){_this.setState({modal:!_this.state.modal});};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var newItem={name:_this.state.name,measured_by:_this.state.measured_by,price:_this.state.price,category:_this.state.category};_this.props.updateItem(_this.props.id,newItem);_this.toggle();};return _this;}_createClass(ItemEditModal,[{key:\"render\",value:function render(){// console.log(\"edit item : \" + editedItem)\n// for(const i of item) {\n//     if (i._id === this.state.itemID) {\n//         editItem = i\n//     }\n// }\nreturn React.createElement(\"div\",null,React.createElement(Button,{color:\"dark\",style:{marginBottom:'2rem'},onClick:this.toggle},\"edit\"),React.createElement(Modal,{isOpen:this.state.modal,toggle:this.toggle},React.createElement(ModalHeader,{toggle:this.toggle},\"Edit material\"),React.createElement(ModalBody,null,React.createElement(Form,{onSubmit:this.onSubmit},React.createElement(FormGroup,null,React.createElement(Label,{for:\"item\"},\"Name\"),React.createElement(Input,{type:\"text\",name:\"name\",id:\"itemName\",value:this.state.editedItem.name,onChange:this.onChange}),React.createElement(Label,{for:\"item\"},\"Measured by\"),React.createElement(Input,{type:\"text\",name:\"measured_by\",id:\"itemMeasuredBy\",value:this.state.editedItem.measured_by,onChange:this.onChange}),React.createElement(Label,{for:\"item\"},\"Price\"),React.createElement(Input,{type:\"text\",name:\"price\",id:\"itemPrice\",value:this.state.editedItem.price,onChange:this.onChange}),React.createElement(Label,{for:\"item\"},\"Category\"),React.createElement(Input,{type:\"text\",name:\"category\",id:\"itemCategory\",value:this.state.editedItem.category,onChange:this.onChange}),React.createElement(Button,{color:\"dark\",style:{marginTop:'2rem'},block:true},\"Save\"))))));}}]);return ItemEditModal;}(Component);var mapStateToProps=function mapStateToProps(state){return{item:state.item};};export default connect(mapStateToProps,{updateItem:updateItem})(ItemEditModal);","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/components/ItemEditModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","updateItem","ItemEditModal","state","modal","name","measured_by","price","category","editedItem","props","edittedItem","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newItem","id","marginBottom","marginTop","mapStateToProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { updateItem } from '../actions/ItemActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ItemEditModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        measured_by: '',\r\n        price: '',\r\n        category: '',\r\n        editedItem: this.props.edittedItem\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState(\r\n            { [e.target.name]: e.target.value }\r\n            )\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newItem = {\r\n            name: this.state.name,\r\n            measured_by: this.state.measured_by,\r\n            price: this.state.price,\r\n            category: this.state.category\r\n        }\r\n\r\n        this.props.updateItem(this.props.id, newItem)\r\n        this.toggle()\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"edit item : \" + editedItem)\r\n\r\n        // for(const i of item) {\r\n        //     if (i._id === this.state.itemID) {\r\n        //         editItem = i\r\n        //     }\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"dark\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >edit</Button>\r\n\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Edit material</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.onSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"item\">Name</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"name\" \r\n                                        id=\"itemName\" \r\n                                        value={this.state.editedItem.name} \r\n                                        onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Measured by</Label>\r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"measured_by\"\r\n                                        id=\"itemMeasuredBy\" \r\n                                        value={this.state.editedItem.measured_by} onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Price</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"price\" \r\n                                        id=\"itemPrice\" \r\n                                        value={this.state.editedItem.price} onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Category</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"category\" \r\n                                        id=\"itemCategory\" \r\n                                        value={this.state.editedItem.category} onChange={this.onChange}/>\r\n                                    <Button\r\n                                        color=\"dark\"\r\n                                        style={{marginTop: '2rem'}}\r\n                                        block\r\n                                        >Save</Button>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps,{ updateItem })(ItemEditModal)"]},"metadata":{},"sourceType":"module"}