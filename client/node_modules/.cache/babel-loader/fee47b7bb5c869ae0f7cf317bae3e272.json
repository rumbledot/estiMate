{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\src\\\\pages\\\\estimate.jsx\";\nimport React, { Component } from 'react';\nimport AppNavbar from '../components/AppNavbar';\nimport AddQuoteItem from '../components/AddQuoteItem';\nimport { Container, ListGroup, ListGroupItem, Input, Button } from 'reactstrap';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\n\nclass EstimatePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotedItems: [],\n      itemTotal: [],\n      grandTotal: 0.0\n    };\n\n    this.getQuoteItem = item => {\n      var joined = this.state.quotedItems.concat(item); // console.log(\"add new item :\" + joined)\n      // console.log(\"add new item :\" + this.state.quotedItems)\n\n      this.setState({\n        quotedItems: joined\n      }); // console.log(this.state.quotedItems)\n    };\n\n    this.onChange = e => {\n      if (parseInt(e.target.value)) {\n        // console.log(\"change\" + e.target.value * e.target.name)\n        const t = parseInt(e.target.value) * parseInt(e.target.name);\n        const i = parseInt(e.target.id);\n        this.state.itemTotal[i] = t;\n        this.setState(this.state.itemTotal);\n        this.getGrandTotal(); // console.log(\"total item: at index\" + i +\" is \" + this.state.itemTotal[i])\n      } else {\n        e.target.value = '';\n        e.target.placeholder = \"Please enter valid a number\"; // console.log(\"not number\")\n      }\n    };\n\n    this.getGrandTotal = () => {\n      for (let i = 0; i < this.state.itemTotal.length; i++) {\n        this.state.grandTotal += this.state.itemTotal[i];\n      }\n\n      console.log(\"Grand total\" + this.state.grandTotal);\n      this.forceUpdate(); // this.setState(this.state.grandTotal)\n    };\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Estimate your house's cost\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Estimated total cost : $\", this.state.grandTotal), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(AddQuoteItem, {\n      toEstimate: this.getQuoteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.quotedItems.map((item, index) => React.createElement(ListGroupItem, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, item.name, \" - Price per unit $\", item.price, React.createElement(Input, {\n      type: \"text\",\n      pattern: \"[0-9]*\",\n      name: item.price,\n      id: index,\n      placeholder: item.measured_by,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Item cost $\", this.state.itemTotal[index]), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\xD7\")))))));\n  }\n\n} // const EstimatePage = () => {\n//     const quotedItems = []\n//     const name = ''\n//     const getQuoteItem = (name) => {\n//         quotedItems.add(name)\n//     }\n//     return (\n//         <Provider store={store}>\n//         <div>\n//             <AppNavbar/>\n//             <Container>\n//                 <h1>Estimate you house cost</h1>\n//                 <br></br>\n//                 <h4>Estimated total cost : 0.00 $</h4>\n//                 <br></br>\n//                 <AddQuoteItem toEstimate = { this.getQuoteItem }/>\n//             </Container>\n//         </div>\n//         </Provider>\n//     )\n// }\n\n\nexport default EstimatePage;","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/pages/estimate.jsx"],"names":["React","Component","AppNavbar","AddQuoteItem","Container","ListGroup","ListGroupItem","Input","Button","Provider","store","EstimatePage","state","quotedItems","itemTotal","grandTotal","getQuoteItem","item","joined","concat","setState","onChange","e","parseInt","target","value","t","name","i","id","getGrandTotal","placeholder","length","console","log","forceUpdate","render","map","index","price","measured_by"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AppNavbar from '../components/AppNavbar'\r\nimport AddQuoteItem from '../components/AddQuoteItem'\r\n\r\nimport { \r\n    Container, \r\n    ListGroup, \r\n    ListGroupItem,\r\n    Input,\r\n    Button\r\n} from 'reactstrap'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../App.css';\r\n\r\nclass EstimatePage extends Component {\r\n\r\n    state = {\r\n        quotedItems: [],\r\n        itemTotal: [],\r\n        grandTotal: 0.0\r\n    }\r\n\r\n    getQuoteItem = (item) => {\r\n        var joined = this.state.quotedItems.concat(item)\r\n        // console.log(\"add new item :\" + joined)\r\n        // console.log(\"add new item :\" + this.state.quotedItems)\r\n        this.setState({ quotedItems: joined })\r\n        // console.log(this.state.quotedItems)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        if (parseInt(e.target.value)) {\r\n            // console.log(\"change\" + e.target.value * e.target.name)\r\n            const t = parseInt(e.target.value) * parseInt(e.target.name)\r\n            const i = parseInt(e.target.id)\r\n\r\n            this.state.itemTotal[i] = t\r\n            this.setState(this.state.itemTotal)\r\n\r\n            this.getGrandTotal()\r\n\r\n            // console.log(\"total item: at index\" + i +\" is \" + this.state.itemTotal[i])\r\n        } else {\r\n            e.target.value=''\r\n            e.target.placeholder = \"Please enter valid a number\"\r\n            // console.log(\"not number\")\r\n        }\r\n    }\r\n\r\n    getGrandTotal = () => {\r\n        for (let i=0; i < this.state.itemTotal.length; i++) {\r\n            this.state.grandTotal += this.state.itemTotal[i]\r\n        }\r\n        console.log(\"Grand total\" + this.state.grandTotal)\r\n        this.forceUpdate()\r\n        // this.setState(this.state.grandTotal)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container>\r\n                    <h1>Estimate your house's cost</h1>\r\n                    <br></br>\r\n                    <h4>Estimated total cost : ${this.state.grandTotal}</h4>\r\n                    <br></br>\r\n                    <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n                    <ListGroup>\r\n                        {this.state.quotedItems.map(( item, index ) => (\r\n                            <ListGroupItem \r\n                            key={index}>\r\n                                {item.name} - Price per unit ${item.price}\r\n                            <Input \r\n                                type=\"text\"\r\n                                pattern=\"[0-9]*\"\r\n                                name={item.price}\r\n                                id={index}\r\n                                placeholder={item.measured_by}\r\n                                onChange={this.onChange}/>\r\n                            <p id={index}>Item cost ${this.state.itemTotal[index]}</p>\r\n                            <Button>&times;</Button>\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Container>\r\n            </div>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\n// const EstimatePage = () => {\r\n\r\n//     const quotedItems = []\r\n//     const name = ''\r\n\r\n//     const getQuoteItem = (name) => {\r\n//         quotedItems.add(name)\r\n//     }\r\n\r\n//     return (\r\n//         <Provider store={store}>\r\n//         <div>\r\n//             <AppNavbar/>\r\n//             <Container>\r\n//                 <h1>Estimate you house cost</h1>\r\n//                 <br></br>\r\n//                 <h4>Estimated total cost : 0.00 $</h4>\r\n//                 <br></br>\r\n//                 <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n//             </Container>\r\n//         </div>\r\n//         </Provider>\r\n//     )\r\n// }\r\n\r\nexport default EstimatePage"]},"metadata":{},"sourceType":"module"}