{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\src\\\\components\\\\AddQuoteItem.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getItems } from '../actions/ItemActions';\n\nclass AddQuoteItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      items: []\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const items = this.props.item.items;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Add quote item\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Pick a material\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, items.map(({\n      _id,\n      name,\n      measured_by,\n      price,\n      category\n    }) => React.createElement(\"li\", {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"edit-btn\",\n      color: \"primary\",\n      size: \"sm\",\n      onClick: this.onEditClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"edit\"), React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: this.onDeleteClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\xD7\"), name, \", \", measured_by, \", \", price, \", \", category))))));\n  }\n\n}\n\nAddQuoteItem.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(AddQuoteItem);","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/components/AddQuoteItem.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","PropTypes","getItems","AddQuoteItem","state","modal","items","toggle","setState","componentDidMount","props","render","item","marginBottom","map","_id","name","measured_by","price","category","onEditClick","bind","onDeleteClick","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,QASO,YATP;AAUA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAMjCa,KANiC,GAMzB;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,KAAK,EAAE;AAFH,KANyB;;AAAA,SAWjCC,MAXiC,GAWxB,MAAM;AACX,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADT,OAAd;AAGH,KAfgC;AAAA;;AAEjCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWR,QAAX;AACH;;AAaDS,EAAAA,MAAM,GAAG;AAAA,UACGL,KADH,GACa,KAAKI,KAAL,CAAWE,IADxB,CACGN,KADH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,MADV;AAEI,MAAA,KAAK,EAAE;AAACO,QAAAA,YAAY,EAAE;AAAf,OAFX;AAGI,MAAA,OAAO,EAAE,KAAKN,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAMI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,KADvB;AAEI,MAAA,MAAM,EAAE,KAAKE,MAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ,oBAAC,WAAD;AACI,MAAA,MAAM,EAAE,KAAKA,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJR,EAOQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACQ,GAAN,CAAU,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA,WAAb;AAA0BC,MAAAA,KAA1B;AAAiCC,MAAAA;AAAjC,KAAD,KACX;AAAI,MAAA,GAAG,EAAEJ,GAAT;AAAc,MAAA,OAAO,EAAE,GAAvB;AAA4B,MAAA,UAAU,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,OAAO,EAAE,KAAKK,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BN,GAA5B,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,OAAO,EAAE,KAAKO,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,EAA8BN,GAA9B,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAaKC,IAbL,QAaaC,WAbb,QAa4BC,KAb5B,QAaqCC,QAbrC,CADC,CADL,CADA,CAPR,CANJ,CADJ;AAsCH;;AA1DgC;;AA6DrChB,YAAY,CAACoB,SAAb,GAAyB;AACrBrB,EAAAA,QAAQ,EAAED,SAAS,CAACuB,IAAV,CAAeC,UADJ;AAErBb,EAAAA,IAAI,EAAEX,SAAS,CAACyB,MAAV,CAAiBD;AAFF,CAAzB;;AAKA,MAAME,eAAe,GAAIvB,KAAD,KAAY;AAChCQ,EAAAA,IAAI,EAAER,KAAK,CAACQ;AADoB,CAAZ,CAAxB;;AAIA,eAAeZ,OAAO,CAAC2B,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,YAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getItems } from '../actions/ItemActions'\r\n\r\nclass AddQuoteItem extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    state = {\r\n        modal: false,\r\n        items: []\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props.item\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"dark\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >Add quote item</Button>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Pick a material</ModalHeader>\r\n                        <ModalBody>\r\n                        <ul>\r\n                            {items.map(({ _id, name, measured_by, price, category }) => (\r\n                            <li key={_id} timeout={500} classNames=\"fade\">\r\n                                <Button\r\n                                    className=\"edit-btn\"\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.onEditClick.bind(this, _id)}\r\n                                >edit</Button>\r\n                                <Button\r\n                                    className=\"remove-btn\"\r\n                                    color=\"danger\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.onDeleteClick.bind(this, _id)}\r\n                                >&times;</Button>\r\n                                {name}, {measured_by}, {price}, {category}\r\n                            </li>\r\n                        ))}\r\n                        </ul>\r\n                        </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddQuoteItem.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(AddQuoteItem)"]},"metadata":{},"sourceType":"module"}