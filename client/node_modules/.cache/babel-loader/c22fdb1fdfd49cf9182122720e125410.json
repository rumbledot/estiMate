{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abram\\\\Documents\\\\MSwDev 2019\\\\SWEN503\\\\Individual\\\\MERN\\\\client\\\\src\\\\components\\\\AddQuoteItem.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getItems } from '../actions/ItemActions';\n\nclass AddQuoteItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      items: []\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onListClick = (name, price) => {\n      console.log(\"click \" + name);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const items = this.props.item.items;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Add quote item\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Pick a material\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, items.map(({\n      _id,\n      name,\n      measured_by,\n      price,\n      category\n    }) => React.createElement(ListGroupItem, {\n      key: _id,\n      action: true,\n      onClick: this.onListClick.bind(this.name, this.price),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, name, \", \", measured_by, \", \", price, \", \", category))))));\n  }\n\n}\n\nAddQuoteItem.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(AddQuoteItem);","map":{"version":3,"sources":["C:/Users/Abram/Documents/MSwDev 2019/SWEN503/Individual/MERN/client/src/components/AddQuoteItem.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","ListGroup","ListGroupItem","connect","PropTypes","getItems","AddQuoteItem","state","modal","items","toggle","setState","onListClick","name","price","console","log","componentDidMount","props","render","item","marginBottom","map","_id","measured_by","category","bind","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,SATJ,EAUIC,aAVJ,QAWO,YAXP;AAaA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,YAAN,SAA2Bd,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAMjCe,KANiC,GAMzB;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,KAAK,EAAE;AAFH,KANyB;;AAAA,SAWjCC,MAXiC,GAWxB,MAAM;AACX,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADT,OAAd;AAGH,KAfgC;;AAAA,SAiBjCI,WAjBiC,GAiBnB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWH,IAAvB;AACH,KAnBgC;AAAA;;AAEjCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWb,QAAX;AACH;;AAiBDc,EAAAA,MAAM,GAAG;AAAA,UACGV,KADH,GACa,KAAKS,KAAL,CAAWE,IADxB,CACGX,KADH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,MADV;AAEI,MAAA,KAAK,EAAE;AAACY,QAAAA,YAAY,EAAE;AAAf,OAFX;AAGI,MAAA,OAAO,EAAE,KAAKX,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAMI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,KADvB;AAEI,MAAA,MAAM,EAAE,KAAKE,MAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQ,oBAAC,WAAD;AACI,MAAA,MAAM,EAAE,KAAKA,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJR,EAOQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACa,GAAN,CAAU,CAAC;AAAEC,MAAAA,GAAF;AAAOV,MAAAA,IAAP;AAAaW,MAAAA,WAAb;AAA0BV,MAAAA,KAA1B;AAAiCW,MAAAA;AAAjC,KAAD,KACX,oBAAC,aAAD;AACA,MAAA,GAAG,EAAEF,GADL;AAEA,MAAA,MAAM,MAFN;AAEO,MAAA,OAAO,EAAG,KAAKX,WAAL,CAAiBc,IAAjB,CAAuB,KAAKb,IAA5B,EAAkC,KAAKC,KAAvC,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKD,IAHL,QAGaW,WAHb,QAG4BV,KAH5B,QAGqCW,QAHrC,CADC,CADL,CADA,CAPR,CANJ,CADJ;AA4BH;;AApDgC;;AAuDrCnB,YAAY,CAACqB,SAAb,GAAyB;AACrBtB,EAAAA,QAAQ,EAAED,SAAS,CAACwB,IAAV,CAAeC,UADJ;AAErBT,EAAAA,IAAI,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBD;AAFF,CAAzB;;AAKA,MAAME,eAAe,GAAIxB,KAAD,KAAY;AAChCa,EAAAA,IAAI,EAAEb,KAAK,CAACa;AADoB,CAAZ,CAAxB;;AAIA,eAAejB,OAAO,CAAC4B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,YAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    ListGroup,\r\n    ListGroupItem\r\n} from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getItems } from '../actions/ItemActions'\r\n\r\nclass AddQuoteItem extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    state = {\r\n        modal: false,\r\n        items: []\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onListClick = (name, price) => {\r\n        console.log(\"click \" + name)\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props.item\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"dark\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >Add quote item</Button>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Pick a material</ModalHeader>\r\n                        <ModalBody>\r\n                        <ListGroup>\r\n                            {items.map(({ _id, name, measured_by, price, category }) => (\r\n                            <ListGroupItem \r\n                            key={_id}\r\n                            action onClick={ this.onListClick.bind (this.name, this.price) }>\r\n                                {name}, {measured_by}, {price}, {category}\r\n                            </ListGroupItem>\r\n                        ))}\r\n                        </ListGroup>\r\n                        </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddQuoteItem.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(AddQuoteItem)"]},"metadata":{},"sourceType":"module"}