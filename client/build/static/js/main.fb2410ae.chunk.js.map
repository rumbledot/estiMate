{"version":3,"sources":["components/AppNavbar.js","pages/index.jsx","actions/ItemActions.js","actions/types.js","components/ItemEditModal.js","components/MaterialList.js","components/ItemModal.js","reducers/itemReducer.js","reducers/index.js","store.js","pages/materials.jsx","components/AddQuoteItem.js","pages/estimate.jsx","p5/experiment.js","pages/p5.jsx","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","setState","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","to","Component","MainPage","getItems","dispatch","setItemsLoading","axios","get","then","res","type","payload","data","ItemEditModal","modal","name","measured_by","price","category","editedItem","props","edittedItem","onChange","e","target","value","onSubmit","preventDefault","newItem","updateItem","id","Button","style","marginBottom","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","marginTop","block","connect","item","post","MaterialList","onDeleteClick","deleteItem","onEditClick","items","ListGroup","TransitionGroup","map","CSSTransition","key","_id","timeout","classNames","ListGroupItem","size","bind","delete","editItem","ItemModal","addItem","placeholder","initialState","loading","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","MaterialPage","AddQuoteItem","onListClick","toEstimate","P5","setup","draw","p5","p5Line","sx","sy","ex","ey","graphic","lineOrigin","lines","EstimatePage","quotedItems","itemTotal","grandTotal","getQuoteItem","joined","concat","parseInt","t","i","getGrandTotal","length","forceUpdate","removeQuoteItem","index","array","splice","cnv","createCanvas","y","windowWidth","width","windowHeight","height","position","createGraphics","background","ellipseMode","CENTER","exist","strokeWeight","stroke","line","reDrawLines","image","noFill","gX","Math","floor","mouseX","gY","mouseY","ellipse","mouseIsPressed","destX","destY","drawOnGraphic","newLine","push","onMouseQuit","pattern","timesClicked","sketch","p","myCustomRedrawAccordingToNewPropsHandler","newProps","getCoords","sendCoords","mouseClicked","console","log","arguments","App","document","body","onkeyup","keyCode","exact","path","component","Home","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb2410ae.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container\r\n} from 'reactstrap'\r\nimport '../App.css';\r\n\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\n\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                <Container>\r\n                    <NavbarBrand href=\"/\">estiMate</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle}/>\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink href=\"https://github.com/rumbledot\">\r\n                                    Github\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink>\r\n                                    <Link className=\"navItem\" to=\"/\">\r\n                                        Home\r\n                                    </Link>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink>\r\n                                    <Link className=\"navItem\" to=\"/materials\">\r\n                                        Materials\r\n                                    </Link>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink  href=\"\">\r\n                                    <Link className=\"navItem\" to=\"/estimate\">\r\n                                        Estimate my house\r\n                                    </Link>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AppNavbar","import React from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport AppNavBar from '../components/AppNavbar'\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div>\r\n        <AppNavBar/>\r\n        <Container>\r\n            <h1>Welcome to estiMate</h1>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage","import axios from 'axios'\r\nimport { \r\n    GET_ITEMS, \r\n    ADD_ITEM, \r\n    DELETE_ITEM, \r\n    ITEMS_LOADING, \r\n    EDIT_ITEM,\r\n    UPDATE_ITEM\r\n} from './types'\r\n\r\nexport const getItems = () => dispatch => {\r\n    dispatch(setItemsLoading())\r\n    axios.get('/api/items')\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_ITEMS,\r\n                payload: res.data\r\n            }))\r\n}\r\n\r\nexport const addItem = item => dispatch => {\r\n    axios.post('/api/items', item)\r\n        .then(res => \r\n            dispatch({\r\n                type: ADD_ITEM,\r\n                payload: res.data\r\n            }))\r\n}\r\n\r\nexport const deleteItem = id => dispatch => {\r\n    axios.delete(`/api/items/${id}`)\r\n        .then (res => \r\n            dispatch({\r\n                type: DELETE_ITEM,\r\n                payload: id\r\n            }))\r\n}\r\n\r\nexport const editItem = id => dispatch => {\r\n    axios.get(`/api/items/${id}`)\r\n        .then (res => \r\n            dispatch({\r\n                type: EDIT_ITEM,\r\n                payload: res.data\r\n            }))\r\n}\r\n\r\nexport const updateItem = (id, item) => dispatch => {\r\n    axios.post('/api/items/', id, item)\r\n        .then (res => \r\n            dispatch({\r\n                type: UPDATE_ITEM,\r\n                payload: res.data\r\n            }))\r\n}\r\n\r\nexport const setItemsLoading = () => {\r\n    return {\r\n        type: ITEMS_LOADING\r\n    }\r\n}","export const GET_ITEMS = 'GET_ITEMS'\r\nexport const ADD_ITEM = 'ADD_ITEM'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\nexport const EDIT_ITEM = 'EDIT_ITEM'\r\nexport const UPDATE_ITEM = 'UPDATE_ITEM'\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING'","import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { updateItem } from '../actions/ItemActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ItemEditModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        measured_by: '',\r\n        price: '',\r\n        category: '',\r\n        editedItem: this.props.edittedItem\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState(\r\n            { [e.target.name]: e.target.value }\r\n            )\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newItem = {\r\n            name: this.state.name,\r\n            measured_by: this.state.measured_by,\r\n            price: this.state.price,\r\n            category: this.state.category\r\n        }\r\n\r\n        this.props.updateItem(this.props.id, newItem)\r\n        this.toggle()\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"edit item : \" + editedItem)\r\n\r\n        // for(const i of item) {\r\n        //     if (i._id === this.state.itemID) {\r\n        //         editItem = i\r\n        //     }\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"dark\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >edit</Button>\r\n\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Edit material</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.onSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"item\">Name</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"name\" \r\n                                        id=\"itemName\" \r\n                                        value={this.state.editedItem.name} \r\n                                        onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Measured by</Label>\r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"measured_by\"\r\n                                        id=\"itemMeasuredBy\" \r\n                                        value={this.state.editedItem.measured_by} onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Price</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"price\" \r\n                                        id=\"itemPrice\" \r\n                                        value={this.state.editedItem.price} onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Category</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"category\" \r\n                                        id=\"itemCategory\" \r\n                                        value={this.state.editedItem.category} onChange={this.onChange}/>\r\n                                    <Button\r\n                                        color=\"dark\"\r\n                                        style={{marginTop: '2rem'}}\r\n                                        block\r\n                                        >Save</Button>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps,{ updateItem })(ItemEditModal)","import React, { Component } from 'react'\r\nimport { \r\n    Container, \r\n    ListGroup, \r\n    ListGroupItem,\r\n    Button \r\n} from 'reactstrap'\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup\r\n} from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport { getItems, deleteItem, editItem } from '../actions/ItemActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport ItemEditModal from '../components/ItemEditModal'\r\n\r\nclass MaterialList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    onDeleteClick = id => {\r\n        this.props.deleteItem(id)\r\n    }\r\n\r\n    onEditClick = id => {\r\n        // this.props.editItem(id)\r\n    }\r\n    \r\n    render() {\r\n        const { items } = this.props.item\r\n\r\n        return (\r\n            <Container>\r\n                <ListGroup>\r\n                    <TransitionGroup>\r\n                        {items.map(( item ) => (\r\n                            <CSSTransition key={item._id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem>\r\n                                <Button\r\n                                    className=\"edit-btn\"\r\n                                    color=\"primary\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.onEditClick.bind(this, this._id)}\r\n                                >edit</Button>\r\n                                <Button\r\n                                    className=\"remove-btn\"\r\n                                    color=\"danger\"\r\n                                    size=\"sm\"\r\n                                    onClick={this.onDeleteClick.bind(this, item._id)}\r\n                                >&times;</Button>\r\n                                {item.name}, {item.measured_by}, {item.price}, {item.category}\r\n                                <ItemEditModal edittedItem={item}/>\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nMaterialList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\nexport default connect(mapStateToProps, { getItems, deleteItem, editItem })(MaterialList)","import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { addItem } from '../actions/ItemActions'\r\n\r\nclass ItemModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: '',\r\n        measured_by: '',\r\n        price: '',\r\n        category: ''\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState(\r\n            { [e.target.name]: e.target.value }\r\n            )\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newItem = {\r\n            name: this.state.name,\r\n            measured_by: this.state.measured_by,\r\n            price: this.state.price,\r\n            category: this.state.category\r\n        }\r\n\r\n        this.props.addItem(newItem)\r\n        this.toggle()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"dark\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >Add New Material</Button>\r\n\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Add a new material</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.onSubmit}>\r\n                                <FormGroup>\r\n                                    <Label for=\"item\">Name</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"name\" \r\n                                        id=\"itemName\" \r\n                                        placeholder=\"Specify material's name\" onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Measured by</Label>\r\n                                    <Input \r\n                                        type=\"text\"\r\n                                        name=\"measured_by\"\r\n                                        id=\"itemMeasuredBy\" \r\n                                        placeholder=\"Specify how material's is measured\" onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Price</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"price\" \r\n                                        id=\"itemPrice\" \r\n                                        placeholder=\"Specify material's price\" onChange={this.onChange}/>\r\n                                    <Label for=\"item\">Category</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"category\" \r\n                                        id=\"itemCategory\" \r\n                                        placeholder=\"Specify material's category\" onChange={this.onChange}/>\r\n                                    <Button\r\n                                        color=\"dark\"\r\n                                        style={{marginTop: '2rem'}}\r\n                                        block\r\n                                        >Add material</Button>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    item:state.item\r\n})\r\n\r\nexport default connect(mapStateToProps,{ addItem })(ItemModal)","import { \r\n    GET_ITEMS, \r\n    ADD_ITEM, \r\n    DELETE_ITEM, \r\n    ITEMS_LOADING, \r\n    EDIT_ITEM, \r\n    UPDATE_ITEM \r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.payload)\r\n            }\r\n\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n\r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case EDIT_ITEM:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n\r\n        case UPDATE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport itemReducer from './itemReducer'\r\n\r\nexport default combineReducers({\r\n    item: itemReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport AppNavbar from '../components/AppNavbar'\r\nimport MaterialList from '../components/MaterialList'\r\nimport ItemModal from '../components/ItemModal'\r\n\r\nimport { Container } from 'reactstrap'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../App.css';\r\n\r\nconst MaterialPage = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"App\">\r\n                <AppNavbar/>\r\n                <Container>\r\n                    <h1>Welcome to estiMate</h1>\r\n                    <ItemModal/>\r\n                    <MaterialList/>\r\n                </Container>\r\n            </div>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default MaterialPage","import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ListGroup,\r\n    ListGroupItem\r\n} from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getItems } from '../actions/ItemActions'\r\n\r\nclass AddQuoteItem extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    state = {\r\n        modal: false,\r\n        items: []\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onListClick = (item) => {\r\n        // console.log(\"click \" + item)\r\n        this.props.toEstimate(item)\r\n        this.toggle()\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props.item\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    color=\"primary\"\r\n                    style={{marginBottom: '2rem'}}\r\n                    onClick={this.toggle}\r\n                >Add quote item</Button>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={this.toggle}\r\n                        >Pick a material</ModalHeader>\r\n                        <ModalBody>\r\n                        <ListGroup>\r\n                            {items.map(( item ) => (\r\n                            <ListGroupItem \r\n                            key={item._id}\r\n                            onClick={ this.onListClick.bind (this, item) }>\r\n                                {item.name}, {item.price}\r\n                            </ListGroupItem>\r\n                        ))}\r\n                        </ListGroup>\r\n                        </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddQuoteItem.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(AddQuoteItem)","import React, { Component } from 'react'\r\nimport AppNavbar from '../components/AppNavbar'\r\nimport AddQuoteItem from '../components/AddQuoteItem'\r\n\r\nimport { \r\n    Container, \r\n    ListGroup, \r\n    ListGroupItem,\r\n    Input,\r\n    Button\r\n} from 'reactstrap'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../App.css';\r\n\r\nimport p5 from 'p5';\r\n\r\nconst P5 = ({ setup, draw }) => {\r\n    const sketch = p5 => {\r\n    p5.setup = () => setup(p5);\r\n    p5.draw = () => draw(p5);\r\n    };\r\n    new p5(sketch);\r\n\r\n    return <></>;\r\n};\r\n\r\nclass p5Line {\r\n    constructor(sx, sy, ex, ey) {\r\n        this.sx = sx\r\n        this.sy = sy\r\n        this.ex = ex\r\n        this.ey = ey\r\n    }\r\n\r\n    sx() {\r\n        return this.sx;\r\n    }\r\n\r\n    sy() {\r\n        return this.sy;\r\n    }\r\n\r\n    ex() {\r\n        return this.ex;\r\n    }\r\n\r\n    ey() {\r\n        return this.ey;\r\n    }\r\n\r\n    setsx(sx) {\r\n        this.sx = sx\r\n    }\r\n\r\n    setsy(sy) {\r\n        this.sy = sy\r\n    }\r\n\r\n    setex(ex) {\r\n        this.ex = ex\r\n    }\r\n\r\n    setey(ey) {\r\n        this.ey = ey\r\n    }\r\n}\r\n\r\n/*** P5 Drawing vars ***/\r\n    var graphic = null\r\n\r\n    var lineOrigin = null\r\n\r\n    var grid = 20\r\n    var lines = []\r\n\r\n    function drawOnGraphic(p5) {\r\n        if (lineOrigin == null) {\r\n            lineOrigin = [(Math.floor(p5.mouseX / grid)) * grid, (Math.floor(p5.mouseY / grid)) * grid]\r\n        } else {\r\n            p5.strokeWeight(4)\r\n            p5.stroke(60)\r\n            let destX = (Math.floor(p5.mouseX / grid)) * grid\r\n            let destY = (Math.floor(p5.mouseY / grid)) * grid\r\n            p5.line(lineOrigin[0], lineOrigin[1], destX, destY)\r\n        }\r\n    }\r\n\r\n    function onMouseQuit(p5) {\r\n    if (lineOrigin != null) {\r\n        graphic.strokeWeight(4)\r\n        graphic.stroke(30)\r\n        graphic.line(lineOrigin[0], lineOrigin[1], (Math.floor(p5.mouseX / grid)) * grid, (Math.floor(p5.mouseY / grid)) * grid)\r\n\r\n        let newLine = new p5Line(lineOrigin[0], lineOrigin[1], (Math.floor(p5.mouseX / grid)) * grid, (Math.floor(p5.mouseY / grid)) * grid)\r\n        lines.push(newLine)\r\n        // console.log(lines)\r\n\r\n        lineOrigin = null\r\n        }\r\n    }\r\n\r\n    function reDrawLines(p5) {\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let exist = lines[i]\r\n            graphic.strokeWeight(4)\r\n            graphic.stroke(30)\r\n            graphic.line(exist.sx, exist.sy, exist.ex, exist.ey)\r\n        }\r\n    }\r\n\r\nclass EstimatePage extends Component {\r\n\r\n    state = {\r\n        quotedItems: [],\r\n        itemTotal: [],\r\n        grandTotal: 0.0,\r\n        lines: []\r\n    }\r\n\r\n    setup(p5) {\r\n        var cnv = p5.createCanvas(280,640)\r\n        var x = (p5.windowWidth - p5.width) / 2\r\n        var y = (p5.windowHeight - p5.height) / 2\r\n        cnv.position(10, y)\r\n        graphic = p5.createGraphics(280, 640)\r\n        graphic.background(122)\r\n\r\n        p5.ellipseMode(p5.CENTER)\r\n        reDrawLines(p5)\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.background(122)\r\n        p5.image(graphic, 0, 0)\r\n\r\n        p5.strokeWeight(1)\r\n        p5.noFill()\r\n        let gX = (Math.floor(p5.mouseX / grid)) * grid\r\n        let gY = (Math.floor(p5.mouseY / grid)) * grid\r\n        p5.ellipse(gX, gY, 10, 10)\r\n\r\n        if (p5.mouseIsPressed) {\r\n            drawOnGraphic(p5)\r\n        } else {\r\n            onMouseQuit(p5)\r\n        }\r\n    }\r\n\r\n    getQuoteItem = (item) => {\r\n        var joined = this.state.quotedItems.concat(item)\r\n        // console.log(\"add new item :\" + joined)\r\n        // console.log(\"add new item :\" + this.state.quotedItems)\r\n        this.setState({ quotedItems: joined })\r\n        // console.log(this.state.quotedItems)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        if (parseInt(e.target.value)) {\r\n            // console.log(\"change\" + e.target.value * e.target.name)\r\n            let t = parseInt(e.target.value) * parseInt(e.target.name)\r\n            let i = parseInt(e.target.id)\r\n            // let arr = [...this.state.itemTotal]\r\n            // arr[i] = t\r\n            this.state.itemTotal[i] = t\r\n            // this.setState({itemTotal: arr})\r\n            this.setState(this.state.itemTotal)\r\n            // console.log(this.state.itemTotal)\r\n\r\n            this.getGrandTotal()\r\n\r\n            // console.log(\"total item: at index\" + i +\" is \" + this.state.itemTotal[i])\r\n        } else {\r\n            e.target.value=''\r\n            e.target.placeholder = \"Please enter valid a number\"\r\n            // console.log(\"not number\")\r\n        }\r\n    }\r\n\r\n    getGrandTotal = () => {\r\n        // let t = [this.state.grandTotal]\r\n        this.state.grandTotal = 0\r\n        for (let i=0; i < this.state.itemTotal.length; i++) {\r\n            this.state.grandTotal += this.state.itemTotal[i]\r\n            // t += this.state.itemTotal[i]\r\n        }\r\n        // console.log(\"Grand total\" + this.state.grandTotal)\r\n        // this.state.grandTotal = t\r\n        this.forceUpdate()\r\n        // this.setState({grandTotal: t})\r\n    }\r\n\r\n    removeQuoteItem = (index) => {\r\n        let array = [...this.state.quotedItems]\r\n        this.state.grandTotal -= this.state.itemTotal[index]\r\n        // console.log(\"index \" + index)\r\n        // console.log(\"item removed val \" + this.state.itemTotal[index])\r\n        // console.log(\"Grand total\" + this.state.grandTotal)\r\n        array.splice(index, 1)\r\n        this.state.itemTotal.splice(index, 1)\r\n        this.setState({quotedItems: array})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n            <div>\r\n                <AppNavbar/>\r\n                <P5 setup={this.setup} draw={this.draw}/>\r\n                <Container>\r\n                    <h1>Estimate your house's cost</h1>\r\n                    <br></br>\r\n                    <h4>Estimated total cost : ${this.state.grandTotal}</h4>\r\n                    <br></br>\r\n                    <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n                    <ListGroup>\r\n                        {this.state.quotedItems.map(( item, index ) => (\r\n                            <ListGroupItem \r\n                            key={index}>\r\n                                {item.name} - Price per unit ${item.price}\r\n                            <Input \r\n                                type=\"text\"\r\n                                pattern=\"[0-9]*\"\r\n                                name={item.price}\r\n                                id={index}\r\n                                placeholder={item.measured_by}\r\n                                onChange={this.onChange}/>\r\n                            <p id={index}>Item cost ${this.state.itemTotal[index]}</p>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                className=\"btn btn-sm\"\r\n                                onClick={this.removeQuoteItem.bind(this, index)}\r\n                            >&times;</Button>\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Container>\r\n            </div>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\n// const EstimatePage = () => {\r\n\r\n//     const quotedItems = []\r\n//     const name = ''\r\n\r\n//     const getQuoteItem = (name) => {\r\n//         quotedItems.add(name)\r\n//     }\r\n\r\n//     return (\r\n//         <Provider store={store}>\r\n//         <div>\r\n//             <AppNavbar/>\r\n//             <Container>\r\n//                 <h1>Estimate you house cost</h1>\r\n//                 <br></br>\r\n//                 <h4>Estimated total cost : 0.00 $</h4>\r\n//                 <br></br>\r\n//                 <AddQuoteItem toEstimate = { this.getQuoteItem }/>\r\n//             </Container>\r\n//         </div>\r\n//         </Provider>\r\n//     )\r\n// }\r\n\r\nexport default EstimatePage","export let timesClicked = 0;\r\nexport default function sketch (p) {\r\n\r\n    p.setup = function () {\r\n        p.createCanvas(600, 600);\r\n    };\r\n\r\n    p.draw = function () {\r\n        p.background(255);\r\n        p.noFill()\r\n        p.stroke(90)\r\n        p.strokeWeight(1)\r\n        p.ellipse(p.mouseX, p.mouseY, 20, 20);\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(newProps){\r\n        if(newProps.getCoords){\r\n            p.sendCoords = newProps.getCoords;\r\n        }\r\n    }\r\n\r\n    p.mouseClicked = function() {\r\n        p.sendCoords(p.mouseX, p.mouseY);\r\n        timesClicked++;\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport sketch from '../p5/experiment';\r\nimport {timesClicked} from '../p5/experiment';\r\n\r\nfunction getCoords(){\r\n    console.log(arguments);\r\n}\r\n\r\nclass App extends Component {\r\n    componentDidMount(){\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <P5Wrapper sketch={sketch} getCoords={getCoords}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\ndocument.body.onkeyup = function(e){\r\n    if(e.keyCode === 32){\r\n        console.log(timesClicked);\r\n    }\r\n}","import React, { Component } from 'react'\n// import AppNavbar from './components/AppNavbar'\n// import MaterialList from './components/MaterialList'\n// import ItemModal from './components/ItemModal'\n\n// import { Container } from 'reactstrap'\n\n// import { Provider } from 'react-redux'\n// import store from './store'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nimport Home from \"./pages/index\"\nimport MaterialPage from \"./pages/materials\"\nimport EstimatePage from \"./pages/estimate\"\nimport P5 from \"./pages/p5\"\nimport {\n  Route\n} from 'react-router-dom'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Route exact path=\"/\"           component={ Home }/>\n        <Route exact path=\"/materials\"  component={ MaterialPage }/>\n        <Route exact path=\"/estimate\"   component={ EstimatePage }/>\n        <Route exact path=\"/p5\"         component={ P5 }/>\n      </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}